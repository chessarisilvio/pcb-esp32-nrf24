#include <SPI.h>
#include <RF24.h>
#include <WiFi.h>
#include <HTTPClient.h>

// nRF24 pin configuration
#define CE_PIN   17
#define CSN_PIN  5

// WiFi credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

// Display ESP32 IP address
const char* displayServerIP = "192.168.1.100";  // Change to actual IP
const int displayServerPort = 80;

RF24 radio(CE_PIN, CSN_PIN);
const byte address[6] = "00001";  // nRF24 pipe address

void setup() {
  Serial.begin(115200);
  
  // Initialize nRF24
  if (!radio.begin()) {
    Serial.println("nRF24 initialization failed!");
    while (1);
  }
  
  radio.openReadingPipe(1, address);
  radio.setPALevel(RF24_PA_LOW);
  radio.startListening();
  
  // Connect to WiFi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected!");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  if (radio.available()) {
    char receivedData[32] = "";
    radio.read(&receivedData, sizeof(receivedData));
    
    Serial.print("nRF24 received: ");
    Serial.println(receivedData);
    
    // Send data to display ESP32 via WiFi
    if (WiFi.status() == WL_CONNECTED) {
      HTTPClient http;
      String url = "http://" + String(displayServerIP) + "/update";
      
      http.begin(url);
      http.addHeader("Content-Type", "application/x-www-form-urlencoded");
      
      String postData = "message=" + String(receivedData);
      int httpCode = http.POST(postData);
      
      if (httpCode > 0) {
        Serial.printf("HTTP Response: %d\n", httpCode);
      } else {
        Serial.printf("HTTP Error: %s\n", http.errorToString(httpCode).c_str());
      }
      
      http.end();
    }
  }
  
  delay(100);
}
