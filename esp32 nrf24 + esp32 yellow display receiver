#include <WiFi.h>
#include <WebServer.h>
#include <TFT_eSPI.h>

// WiFi credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

WebServer server(80);
TFT_eSPI tft = TFT_eSPI();

String lastMessage = "Waiting for data...";

void setup() {
  Serial.begin(115200);
  
  // Initialize display
  tft.init();
  tft.setRotation(1);
  tft.fillScreen(TFT_BLACK);
  tft.setTextColor(TFT_WHITE, TFT_BLACK);
  tft.setTextSize(2);
  
  // Connect to WiFi
  WiFi.begin(ssid, password);
  tft.setCursor(0, 0);
  tft.print("Connecting WiFi...");
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  tft.fillScreen(TFT_BLACK);
  tft.setCursor(0, 0);
  tft.println("WiFi Connected!");
  tft.print("IP: ");
  tft.println(WiFi.localIP());
  
  Serial.println("\nWiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  
  delay(2000);
  
  // Setup web server
  server.on("/update", HTTP_POST, handleUpdate);
  server.begin();
  
  Serial.println("HTTP server started");
  updateDisplay();
}

void handleUpdate() {
  if (server.hasArg("message")) {
    lastMessage = server.arg("message");
    Serial.print("Received: ");
    Serial.println(lastMessage);
    updateDisplay();
    server.send(200, "text/plain", "OK");
  } else {
    server.send(400, "text/plain", "Bad Request");
  }
}

void updateDisplay() {
  tft.fillScreen(TFT_BLACK);
  tft.setCursor(0, 0);
  tft.setTextColor(TFT_YELLOW, TFT_BLACK);
  tft.setTextSize(2);
  tft.println("nRF24 Message:");
  tft.println("");
  tft.setTextColor(TFT_WHITE, TFT_BLACK);
  tft.setTextSize(3);
  tft.println(lastMessage);
}

void loop() {
  server.handleClient();
  delay(10);
}
